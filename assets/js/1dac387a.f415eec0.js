"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7341],{4950:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"blogs/CUDA\u7f16\u7a0b\u5b66\u4e60\u7b14\u8bb0/Tips/CUDA\u4e2d\u7684\u7edf\u4e00\u865a\u62df\u5185\u5b58","title":"CUDA\u4e2d\u7684\u7edf\u4e00\u865a\u62df\u5185\u5b58","description":"\u5728CUDA\uff08Compute Unified Device Architecture\uff09\u4e2d\uff0c\u7edf\u4e00\u865a\u62df\u5185\u5b58\uff08Unified Virtual Memory\uff0cUVM\uff09\u662f\u4e00\u79cd\u5185\u5b58\u7ba1\u7406\u673a\u5236\uff0c\u5b83\u4f7f\u5f97CPU\u548cGPU\u53ef\u4ee5\u5171\u4eab\u540c\u4e00\u5730\u5740\u7a7a\u95f4\uff0c\u4ece\u800c\u7b80\u5316\u4e86\u5185\u5b58\u7ba1\u7406\u548c\u6570\u636e\u4f20\u8f93\u3002UVM\u7684\u4e3b\u8981\u7279\u70b9\u548c\u4f18\u52bf\u5305\u62ec\uff1a","source":"@site/docs/blogs/5-CUDA\u7f16\u7a0b\u5b66\u4e60\u7b14\u8bb0/0-Tips/1-CUDA\u4e2d\u7684\u7edf\u4e00\u865a\u62df\u5185\u5b58.md","sourceDirName":"blogs/5-CUDA\u7f16\u7a0b\u5b66\u4e60\u7b14\u8bb0/0-Tips","slug":"/blogs/CUDA\u7f16\u7a0b\u5b66\u4e60\u7b14\u8bb0/Tips/CUDA\u4e2d\u7684\u7edf\u4e00\u865a\u62df\u5185\u5b58","permalink":"/docs/blogs/CUDA\u7f16\u7a0b\u5b66\u4e60\u7b14\u8bb0/Tips/CUDA\u4e2d\u7684\u7edf\u4e00\u865a\u62df\u5185\u5b58","draft":false,"unlisted":false,"editUrl":"https://buaaer-xing.github.io/docs/blogs/5-CUDA\u7f16\u7a0b\u5b66\u4e60\u7b14\u8bb0/0-Tips/1-CUDA\u4e2d\u7684\u7edf\u4e00\u865a\u62df\u5185\u5b58.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{},"sidebar":"blogs","previous":{"title":"\u66d9\u5149\u8d85\u7b97\u7684\u4f7f\u7528","permalink":"/docs/blogs/\u9ad8\u6027\u80fd\u8ba1\u7b97/\u76f8\u5173\u5de5\u5177\u5e93\u5b66\u4e60/\u66d9\u5149\u8d85\u7b97/\u66d9\u5149\u8d85\u7b97\u7684\u4f7f\u7528"},"next":{"title":"NVIDIA Tensor Core \u7f16\u7a0b","permalink":"/docs/blogs/CUDA\u7f16\u7a0b\u5b66\u4e60\u7b14\u8bb0/Tips/NVIDIA Tensor Core \u7f16\u7a0b"}}');var t=i(4848),c=i(8453);const r={},o=void 0,l={},d=[];function a(n){const e={code:"code",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,c.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.p,{children:"\u5728CUDA\uff08Compute Unified Device Architecture\uff09\u4e2d\uff0c\u7edf\u4e00\u865a\u62df\u5185\u5b58\uff08Unified Virtual Memory\uff0cUVM\uff09\u662f\u4e00\u79cd\u5185\u5b58\u7ba1\u7406\u673a\u5236\uff0c\u5b83\u4f7f\u5f97CPU\u548cGPU\u53ef\u4ee5\u5171\u4eab\u540c\u4e00\u5730\u5740\u7a7a\u95f4\uff0c\u4ece\u800c\u7b80\u5316\u4e86\u5185\u5b58\u7ba1\u7406\u548c\u6570\u636e\u4f20\u8f93\u3002UVM\u7684\u4e3b\u8981\u7279\u70b9\u548c\u4f18\u52bf\u5305\u62ec\uff1a"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"\u7b80\u5316\u7f16\u7a0b\u6a21\u578b"}),"\uff1a\u4f7f\u7528UVM\uff0c\u5f00\u53d1\u8005\u4e0d\u9700\u8981\u663e\u5f0f\u5730\u7ba1\u7406CPU\u548cGPU\u4e4b\u95f4\u7684\u6570\u636e\u4f20\u8f93\u3002\u6570\u636e\u53ef\u4ee5\u81ea\u52a8\u5728\u9700\u8981\u7684\u5730\u65b9\u88ab\u8bbf\u95ee\uff0c\u4ece\u800c\u51cf\u5c11\u4e86\u624b\u52a8\u7684\u5185\u5b58\u62f7\u8d1d\u64cd\u4f5c\u3002"]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"\u7edf\u4e00\u5730\u5740\u7a7a\u95f4"}),"\uff1aCPU\u548cGPU\u5171\u4eab\u540c\u4e00\u4e2a\u865a\u62df\u5730\u5740\u7a7a\u95f4\uff0c\u7a0b\u5e8f\u4e2d\u53ef\u4ee5\u4f7f\u7528\u76f8\u540c\u7684\u6307\u9488\u6765\u8bbf\u95ee\u5728CPU\u548cGPU\u4e0a\u7684\u6570\u636e\u3002\u8fd9\u5927\u5927\u7b80\u5316\u4e86\u6307\u9488\u7ba1\u7406\u548c\u6570\u636e\u8bbf\u95ee\u3002"]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"\u81ea\u52a8\u5316\u7684\u6570\u636e\u8fc1\u79fb"}),"\uff1aCUDA\u8fd0\u884c\u65f6\u4f1a\u6839\u636e\u6570\u636e\u7684\u4f7f\u7528\u60c5\u51b5\uff0c\u81ea\u52a8\u5728CPU\u548cGPU\u4e4b\u95f4\u8fc1\u79fb\u6570\u636e\u3002\u8fd9\u6837\u53ef\u4ee5\u6709\u6548\u5229\u7528CPU\u548cGPU\u7684\u5185\u5b58\uff0c\u5e76\u5728\u9700\u8981\u65f6\u63d0\u4f9b\u6570\u636e\u3002"]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"\u63d0\u9ad8\u5f00\u53d1\u6548\u7387"}),"\uff1a\u5f00\u53d1\u8005\u53ef\u4ee5\u4e13\u6ce8\u4e8e\u7b97\u6cd5\u7684\u5b9e\u73b0\uff0c\u800c\u4e0d\u9700\u8981\u82b1\u8d39\u5927\u91cf\u65f6\u95f4\u5904\u7406\u5185\u5b58\u7ba1\u7406\u548c\u6570\u636e\u4f20\u8f93\u95ee\u9898\u3002\u8fd9\u6709\u52a9\u4e8e\u52a0\u5feb\u5f00\u53d1\u8fdb\u7a0b\uff0c\u63d0\u9ad8\u4ee3\u7801\u7684\u53ef\u7ef4\u62a4\u6027\u3002"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(e.p,{children:["\u8981\u4f7f\u7528UVM\uff0c\u9700\u8981\u5728\u4ee3\u7801\u4e2d\u4f7f\u7528",(0,t.jsx)(e.code,{children:"cudaMallocManaged"}),"\u51fd\u6570\u6765\u5206\u914d\u7edf\u4e00\u865a\u62df\u5185\u5b58\u3002\u4f8b\u5982\uff1a"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-cpp",children:'#include <iostream>\n#include <cuda_runtime.h>\n\n__global__ void add(int *a, int *b, int *c, int n) {\n    int idx = threadIdx.x + blockIdx.x * blockDim.x;\n    if (idx < n) {\n        c[idx] = a[idx] + b[idx];\n    }\n}\n\nint main() {\n    const int N = 1000;\n    int *a, *b, *c;\n\n    // \u4f7f\u7528cudaMallocManaged\u5206\u914d\u7edf\u4e00\u865a\u62df\u5185\u5b58\n    cudaMallocManaged(&a, N * sizeof(int));\n    cudaMallocManaged(&b, N * sizeof(int));\n    cudaMallocManaged(&c, N * sizeof(int));\n\n    // \u521d\u59cb\u5316\u6570\u636e\n    for (int i = 0; i < N; ++i) {\n        a[i] = i;\n        b[i] = i * 2;\n    }\n\n    // \u542f\u52a8CUDA\u6838\u51fd\u6570\n    int blockSize = 256;\n    int numBlocks = (N + blockSize - 1) / blockSize;\n    add<<<numBlocks, blockSize>>>(a, b, c, N);\n\n    // \u7b49\u5f85CUDA\u6838\u51fd\u6570\u6267\u884c\u5b8c\u6bd5\n    cudaDeviceSynchronize();\n\n    // \u68c0\u67e5\u7ed3\u679c\n    for (int i = 0; i < N; ++i) {\n        if (c[i] != a[i] + b[i]) {\n            std::cerr << "Error at index " << i << ": " << c[i] << " != " << a[i] + b[i] << std::endl;\n            return -1;\n        }\n    }\n\n    std::cout << "All results are correct!" << std::endl;\n\n    // \u91ca\u653e\u5185\u5b58\n    cudaFree(a);\n    cudaFree(b);\n    cudaFree(c);\n\n    return 0;\n}\n'})})]})}function u(n={}){const{wrapper:e}={...(0,c.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(a,{...n})}):a(n)}},8453:(n,e,i)=>{i.d(e,{R:()=>r,x:()=>o});var s=i(6540);const t={},c=s.createContext(t);function r(n){const e=s.useContext(c);return s.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:r(n.components),s.createElement(c.Provider,{value:e},n.children)}}}]);